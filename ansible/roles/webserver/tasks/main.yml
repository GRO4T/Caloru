---
- name: Check required variables
  ansible.builtin.fail:
    msg: "Variable {{ item }} is not defined"
  when: item not in vars
  with_items: "{{ required_vars }}"

- name: Install apache
  ansible.builtin.package:
    name: "{{ apache_package }}"
    state: present
  notify: Enable apache service (start on boot)
  become: yes

- name: Create ~/install directory
  ansible.builtin.file:
    path: ~/install
    state: directory
    mode: '0755'

- name: Check if mod_wsgi.so exists
  ansible.builtin.stat:
    path: /usr/lib64/httpd/modules/mod_wsgi.so
  register: mod_wsgi_so

- name: Install mod_wsgi
  ansible.builtin.import_tasks:
    file: install_mod_wsgi.yml
  when: not mod_wsgi_so.stat.exists

# - name: Copy httpd configuration
#   ansible.builtin.copy:
#     src: httpd.conf
#     dest: /etc/httpd/conf/httpd.conf
#   notify: Restart apache service
#   become: yes

- name: Copy httpd configuration
  ansible.builtin.template:
    src: httpd.conf.j2
    dest: /etc/httpd/conf/httpd.conf
  notify: Restart apache service
  become: yes

- name: Install additional packages
  ansible.builtin.package:
    name:
      - "{{ rsync_package }}"
    state: present
  become: yes

- name: Enable HTTP traffic on firewall
  ansible.posix.firewalld:
    service: http
    permanent: yes
    immediate: yes
    state: enabled
  become: yes

- name: Setup {{ web_apps_root }} directory
  ansible.builtin.import_tasks:
    file: setup_webapps_directory.yml
